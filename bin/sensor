#!/bin/sh

case $1 in
        cpu|c)
                sensors | grep 'Package id 0:' | cut -c17-20
        ;;
        core0|c0)
                sensors | grep 'Core 0:' | cut -c17-20
        ;;
        core1|c1)
                sensors | grep 'Core 1:' | cut -c17-20
        ;;
        core2|c2)
                sensors | grep 'Core 2:' | cut -c17-20
        ;;
        core3|c3)
                sensors | grep 'Core 3:' | cut -c17-20
        ;;
        fan1|f1)
                sensors | grep 'fan1:' | sed 's/[^.0-9][^.0-9]*/:/g'  | cut -d":" -f3
        ;;
        fan2|f2)
                sensors | grep 'fan2:' | sed 's/[^.0-9][^.0-9]*/:/g'  | cut -d":" -f3
        ;;
        fan3|f3)
                sensors | grep 'fan3:' | sed 's/[^.0-9][^.0-9]*/:/g'  | cut -d":" -f3
        ;;
        updates|u)
                apt-get upgrade -s | /usr/bin/grep -P '^\d+ upgraded' | cut -d" " -f1
        ;;
        list-updates|lu)
                apt list --upgradeable 2>/dev/null | /usr/bin/grep / | cut -d"/" -f1
        ;;
        load|l)
                top -bn1 | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{print 100 - $1}'
        ;;
        mem_per|mp)
                total=$(free -m | grep Mem: | sed 's/[^.0-9][^.0-9]*/:/g' | cut -d: -f2)
                used=$(free -m | grep Mem: | sed 's/[^.0-9][^.0-9]*/:/g' | cut -d: -f3)
                echo "scale=1;$used*100/$total" | bc
        ;;
        mem_total|mt)
                free -m | grep Mem: | sed 's/[^.0-9][^.0-9]*/:/g' | cut -d":" -f2
        ;;
        mem_used|mu)
                free -m | grep Mem: | sed 's/[^.0-9][^.0-9]*/:/g' | cut -d":" -f3
        ;;
        mem_free|mf)
                free -m | grep Mem: | sed 's/[^.0-9][^.0-9]*/:/g' | cut -d":" -f4
        ;;
## terraserver
        rpool)
                zpool list -o name,cap | grep rpool | sed 's/[^.0-9][^.0-9]*//g' | sed "s/%//g"
        ;;
        tank-pool)
                zpool list -o name,cap | grep tank-pool | sed 's/[^.0-9][^.0-9]*//g' | sed "s/%//g"
        ;;
        scrub-rpool)
                running=$(zpool status rpool | grep -c 'in progress')
                paused=$(zpool status rpool | grep -c 'paused')
                last=$(zpool status rpool | grep 'repaired' | awk '{print $13" "$12" "$14}' | cut -d":" -f1-2)
                last_date=$(zpool status rpool | grep 'repaired' | awk '{print $11" "$12" "$13" "$14" "$15}')
                last_iso=$(date -d "$last_date" +"%Y-%m-%dT%H:%M:%SZ")
                percentage=$(zpool status rpool | grep done | awk '{print $3}' | sed "s/%//g")
                remaining=$(zpool status rpool | grep 'to go'  | awk '{print $5}'  | cut -d":" -f1-2)
                speed=$(zpool status rpool | grep 'issued at'  | awk '{print $8}' | sed 's/[^.0-9][^.0-9]*//g')
                if [ $running -eq 1 ]; then
                        status="running"
                elif [ $paused -eq 1 ]; then
                        status="paused"
                else
                        status="stopped"
                fi
                printf '{"status":"%s","percentage":"%s","remaining":"%s","speed":"%s","last":"%s"}\n' "$status" "$percentage" "$remaining" "$speed" "$last_iso"
        ;;
        scrub-tank)
                running=$(zpool status tank-pool | grep -c 'in progress')
                paused=$(zpool status tank-pool | grep -c 'paused')
                last=$(zpool status tank-pool | grep 'repaired' | awk '{print $13" "$12" "$14}' | cut -d":" -f1-2)
                percentage=$(zpool status tank-pool | grep done | awk '{print $3}' | sed "s/%//g")
                remaining=$(zpool status tank-pool | grep 'to go'  | awk '{print $5}'  | cut -d":" -f1-2)
                speed=$(zpool status tank-pool | grep 'issued at'  | awk '{print $8}' | sed 's/[^.0-9][^.0-9]*//g')
                if [ $running -eq 1 ]; then
                        status="running"
                elif [ $paused -eq 1 ]; then
                        status="paused"
                else
                        status="stopped"
                fi
                printf '{"status":"%s","percentage":"%s","remaining":"%s","speed":"%s","last":"%s"}\n' "$status" "$percentage" "$remaining" "$speed" "$last"
        ;;
## miniserver
        local-pool)
                pvs --units b --no-suffix --noheadings -o pv_name,pv_size,pv_used | awk '{ printf $3 * 100 / $2 }'
        ;;
        local-root)
                lsblk -ao NAME,FSUSE% | grep pve-root | sed 's/[^.0-9][^.0-9]*//g' | sed "s/%//g"
        ;;
        local-lvm)
                lvdisplay /dev/pve/data | sed -n '/pool data/{s/  */ /gp}' | cut -d' ' -f5 | sed "s/%//g"
        ;;
        local-backup)
                df | sed -n '/local-backup/{s/  */ /gp}' | cut -d' ' -f5 | sed "s/%//g"
        ;;
esac
